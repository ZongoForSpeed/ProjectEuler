#include "Problemes.h"
#include "Arithmetiques.h"
#include "Timer.h"

#include <iostream>
#include <numeric>

typedef unsigned long long nombre;
typedef std::vector<nombre> vecteur;

ENREGISTRER_PROBLEME(2, "Even Fibonacci numbers")
{
    // Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
    // By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    // 
    // By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
    // find the sum of the even-valued terms.    
    Timer t ("probleme 2");
    vecteur fibonacci;
    fibonacci.push_back(1);
    fibonacci.push_back(2);
    
    while (fibonacci.back() < 4000000L)
    {
        fibonacci.push_back(fibonacci.back() + fibonacci.at(fibonacci.size() - 2));
    }
    fibonacci.pop_back();
    
    nombre solution = std::accumulate(fibonacci.begin(), fibonacci.end(), 0, [](const nombre & somme, const nombre & f)
    {
        return (f%2 == 0) ? somme + f : somme;
    });
    std::cout << "Solution: " << solution << std::endl;
}
