#include "problemes.h"
#include "mpz_nombre.h"

typedef std::vector<mpz_nombre> vecteur;

namespace {
    mpz_nombre nombre_facteur(const mpz_nombre &n, const mpz_nombre &p, const mpz_nombre &modulo) {
        mpz_nombre quotient = n / p;
        mpz_nombre resultat = quotient;

        while (quotient >= p) {
            quotient /= p;
            resultat += quotient;
            resultat %= modulo;
        }

        return resultat;
    }

    mpz_nombre NF(size_t p, size_t q, size_t n) {
        const mpz_nombre modulo = mpz_nombre::puissance(p, n);
        size_t S = 290797;

        mpz_nombre resultat = 0;

        vecteur cache(p, 0);
        for (size_t i = 0; i <= q; ++i) {
            size_t T = S % p;
            S = (S * S) % 50515093;

            if (i < n) {
                resultat += nombre_facteur(T * mpz_nombre::puissance(p, i), p, modulo);
            } else {
                if (cache[T] == 0) cache[T] = nombre_facteur(T * modulo, p, modulo);
                resultat += cache[T];
            }

            resultat %= modulo;
        }

        return resultat;
    }
}

ENREGISTRER_PROBLEME(288, "An enormous factorial") {
    // For any prime p the number N(p,q) is defined by N(p,q) = ∑n=0 to q Tn*p**n with Tn generated by the following
    // random number generator:
    //
    // S0 = 290797
    // Sn+1 = Sn² mod 50515093
    // Tn = Sn mod p
    // 
    // Let Nfac(p,q) be the factorial of N(p,q).
    // Let NF(p,q) be the number of factors p in Nfac(p,q).
    // 
    // You are given that NF(3,10000) mod 3**20=624955285.
    //
    // Find NF(61,10**7) mod 61**10
    mpz_nombre resultat = NF(61, 10000000, 10);
    return resultat.to_string();
}
