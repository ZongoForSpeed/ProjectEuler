#include "Problemes.h"
#include "Arithmetiques.h"
#include "Timer.h"

#include <iostream>
#include <algorithm>

typedef unsigned long long nombre;

void probleme044()
{
    Timer t("probleme 44");
    // Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
    //
    //                              1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
    //
    // It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48,
    // is not pentagonal.
    //
    // Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and
    // D = |Pk − Pj| is minimised; what is the value of D?
    nombre resultat = 0;
    for (nombre i = 1; i < 3000; ++i)
    {
        nombre pentagonal_i = polygonal::pentagonal(i);
        bool trouve = false;
        for (nombre j = i + 1; j < 3000; ++j)
        {
            nombre pentagonal_j = polygonal::pentagonal(j);
            if (polygonal::est_pentagonal(pentagonal_j - pentagonal_i) && polygonal::est_pentagonal(pentagonal_j + pentagonal_i))
            {
                trouve = true;
                resultat = pentagonal_j - pentagonal_i;
            }
        }
        if (trouve)
            break;
    }
    std::cout << "Solution: " << resultat << std::endl;
}
